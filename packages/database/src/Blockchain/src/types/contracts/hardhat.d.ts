/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomiclabs/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "IzERC1155MasterTokenShop",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IzERC1155MasterTokenShop__factory>;
    getContractFactory(
      name: "APrivatezERC1155MasterTokenShop",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.APrivatezERC1155MasterTokenShop__factory>;
    getContractFactory(
      name: "IPrivatezERC1155MasterTokenShop",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPrivatezERC1155MasterTokenShop__factory>;
    getContractFactory(
      name: "PrivatezERC1155MasterTokenShop",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PrivatezERC1155MasterTokenShop__factory>;
    getContractFactory(
      name: "ZERC1155MasterTokenShop",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ZERC1155MasterTokenShop__factory>;
    getContractFactory(
      name: "IzERC1155TokenShop",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IzERC1155TokenShop__factory>;
    getContractFactory(
      name: "APrivatezERC1155TokenShop",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.APrivatezERC1155TokenShop__factory>;
    getContractFactory(
      name: "IPrivatezERC1155TokenShop",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPrivatezERC1155TokenShop__factory>;
    getContractFactory(
      name: "PrivatezERC1155TokenShop",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PrivatezERC1155TokenShop__factory>;
    getContractFactory(
      name: "ZERC1155TokenShop",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ZERC1155TokenShop__factory>;
    getContractFactory(
      name: "IzPausable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IzPausable__factory>;
    getContractFactory(
      name: "APrivatezPausable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.APrivatezPausable__factory>;
    getContractFactory(
      name: "IPrivatezPausable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPrivatezPausable__factory>;
    getContractFactory(
      name: "PrivatezPausable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PrivatezPausable__factory>;
    getContractFactory(
      name: "ZPausable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ZPausable__factory>;
    getContractFactory(
      name: "ERC1155Struct",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155Struct__factory>;
    getContractFactory(
      name: "ERC1155Master",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155Master__factory>;
    getContractFactory(
      name: "ERC1155Receiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155Receiver__factory>;
    getContractFactory(
      name: "ERC1155Snapshot",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155Snapshot__factory>;
    getContractFactory(
      name: "IERC1155Master",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155Master__factory>;
    getContractFactory(
      name: "IERC1155Snapshot",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155Snapshot__factory>;
    getContractFactory(
      name: "Membership",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Membership__factory>;
    getContractFactory(
      name: "Propaganda_Presale",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Propaganda_Presale__factory>;
    getContractFactory(
      name: "ProvaMaster",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ProvaMaster__factory>;
    getContractFactory(
      name: "SimpleStorage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SimpleStorage__factory>;
    getContractFactory(
      name: "USDC",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.USDC__factory>;
    getContractFactory(
      name: "ZionDao",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ZionDao__factory>;
    getContractFactory(
      name: "ZionGovernor",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ZionGovernor__factory>;
    getContractFactory(
      name: "ZionLib",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ZionLib__factory>;
    getContractFactory(
      name: "ERC1155IndividualURI",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155IndividualURI__factory>;
    getContractFactory(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ownable__factory>;
    getContractFactory(
      name: "GovernorCountingSimple",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GovernorCountingSimple__factory>;
    getContractFactory(
      name: "GovernorSettings",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GovernorSettings__factory>;
    getContractFactory(
      name: "GovernorVotes",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GovernorVotes__factory>;
    getContractFactory(
      name: "GovernorVotesQuorumFraction",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GovernorVotesQuorumFraction__factory>;
    getContractFactory(
      name: "Governor",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Governor__factory>;
    getContractFactory(
      name: "GovernorLib",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GovernorLib__factory>;
    getContractFactory(
      name: "IGovernor",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IGovernor__factory>;
    getContractFactory(
      name: "ERC1155",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155__factory>;
    getContractFactory(
      name: "IERC1155MetadataURI",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155MetadataURI__factory>;
    getContractFactory(
      name: "ERC1155Lib",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155Lib__factory>;
    getContractFactory(
      name: "IERC1155",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155__factory>;
    getContractFactory(
      name: "IERC1155Receiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155Receiver__factory>;
    getContractFactory(
      name: "ERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20__factory>;
    getContractFactory(
      name: "ERC20Permit",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20Permit__factory>;
    getContractFactory(
      name: "IERC20Permit",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Permit__factory>;
    getContractFactory(
      name: "ERC20Capped",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20Capped__factory>;
    getContractFactory(
      name: "ERC20Votes",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20Votes__factory>;
    getContractFactory(
      name: "IERC20Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Metadata__factory>;
    getContractFactory(
      name: "ERC20Lib",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20Lib__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "ERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC165__factory>;
    getContractFactory(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165__factory>;

    getContractAt(
      name: "IzERC1155MasterTokenShop",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IzERC1155MasterTokenShop>;
    getContractAt(
      name: "APrivatezERC1155MasterTokenShop",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.APrivatezERC1155MasterTokenShop>;
    getContractAt(
      name: "IPrivatezERC1155MasterTokenShop",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPrivatezERC1155MasterTokenShop>;
    getContractAt(
      name: "PrivatezERC1155MasterTokenShop",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PrivatezERC1155MasterTokenShop>;
    getContractAt(
      name: "ZERC1155MasterTokenShop",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ZERC1155MasterTokenShop>;
    getContractAt(
      name: "IzERC1155TokenShop",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IzERC1155TokenShop>;
    getContractAt(
      name: "APrivatezERC1155TokenShop",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.APrivatezERC1155TokenShop>;
    getContractAt(
      name: "IPrivatezERC1155TokenShop",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPrivatezERC1155TokenShop>;
    getContractAt(
      name: "PrivatezERC1155TokenShop",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PrivatezERC1155TokenShop>;
    getContractAt(
      name: "ZERC1155TokenShop",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ZERC1155TokenShop>;
    getContractAt(
      name: "IzPausable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IzPausable>;
    getContractAt(
      name: "APrivatezPausable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.APrivatezPausable>;
    getContractAt(
      name: "IPrivatezPausable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPrivatezPausable>;
    getContractAt(
      name: "PrivatezPausable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PrivatezPausable>;
    getContractAt(
      name: "ZPausable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ZPausable>;
    getContractAt(
      name: "ERC1155Struct",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155Struct>;
    getContractAt(
      name: "ERC1155Master",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155Master>;
    getContractAt(
      name: "ERC1155Receiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155Receiver>;
    getContractAt(
      name: "ERC1155Snapshot",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155Snapshot>;
    getContractAt(
      name: "IERC1155Master",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155Master>;
    getContractAt(
      name: "IERC1155Snapshot",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155Snapshot>;
    getContractAt(
      name: "Membership",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Membership>;
    getContractAt(
      name: "Propaganda_Presale",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Propaganda_Presale>;
    getContractAt(
      name: "ProvaMaster",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ProvaMaster>;
    getContractAt(
      name: "SimpleStorage",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SimpleStorage>;
    getContractAt(
      name: "USDC",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.USDC>;
    getContractAt(
      name: "ZionDao",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ZionDao>;
    getContractAt(
      name: "ZionGovernor",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ZionGovernor>;
    getContractAt(
      name: "ZionLib",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ZionLib>;
    getContractAt(
      name: "ERC1155IndividualURI",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155IndividualURI>;
    getContractAt(
      name: "Ownable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Ownable>;
    getContractAt(
      name: "GovernorCountingSimple",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.GovernorCountingSimple>;
    getContractAt(
      name: "GovernorSettings",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.GovernorSettings>;
    getContractAt(
      name: "GovernorVotes",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.GovernorVotes>;
    getContractAt(
      name: "GovernorVotesQuorumFraction",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.GovernorVotesQuorumFraction>;
    getContractAt(
      name: "Governor",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Governor>;
    getContractAt(
      name: "GovernorLib",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.GovernorLib>;
    getContractAt(
      name: "IGovernor",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IGovernor>;
    getContractAt(
      name: "ERC1155",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155>;
    getContractAt(
      name: "IERC1155MetadataURI",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155MetadataURI>;
    getContractAt(
      name: "ERC1155Lib",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155Lib>;
    getContractAt(
      name: "IERC1155",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155>;
    getContractAt(
      name: "IERC1155Receiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155Receiver>;
    getContractAt(
      name: "ERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20>;
    getContractAt(
      name: "ERC20Permit",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20Permit>;
    getContractAt(
      name: "IERC20Permit",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Permit>;
    getContractAt(
      name: "ERC20Capped",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20Capped>;
    getContractAt(
      name: "ERC20Votes",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20Votes>;
    getContractAt(
      name: "IERC20Metadata",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Metadata>;
    getContractAt(
      name: "ERC20Lib",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20Lib>;
    getContractAt(
      name: "IERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "ERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC165>;
    getContractAt(
      name: "IERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
  }
}
