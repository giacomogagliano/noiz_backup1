/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  SimpleStorage,
  SimpleStorageInterface,
} from "../../../contracts/zion_contracts/SimpleStorage";

const _abi = [
  {
    inputs: [],
    name: "getNumber",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "myString",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "number_",
        type: "uint256",
      },
    ],
    name: "setNumber",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "myString_",
        type: "string",
      },
    ],
    name: "setString",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040526040518060200160405280600081525060009080519060200190610029929190610041565b50600060015534801561003b57600080fd5b50610145565b82805461004d90610113565b90600052602060002090601f01602090048101928261006f57600085556100b6565b82601f1061008857805160ff19168380011785556100b6565b828001600101855582156100b6579182015b828111156100b557825182559160200191906001019061009a565b5b5090506100c391906100c7565b5090565b5b808211156100e05760008160009055506001016100c8565b5090565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061012b57607f821691505b6020821081141561013f5761013e6100e4565b5b50919050565b610595806101546000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80633fb5c1cb14610051578063492bfa181461006d5780637fcaf6661461008b578063f2c9ecd8146100a7575b600080fd5b61006b6004803603810190610066919061026e565b6100c5565b005b6100756100cf565b6040516100829190610334565b60405180910390f35b6100a560048036038101906100a0919061048b565b61015d565b005b6100af610177565b6040516100bc91906104e3565b60405180910390f35b8060018190555050565b600080546100dc9061052d565b80601f01602080910402602001604051908101604052809291908181526020018280546101089061052d565b80156101555780601f1061012a57610100808354040283529160200191610155565b820191906000526020600020905b81548152906001019060200180831161013857829003601f168201915b505050505081565b8060009080519060200190610173929190610181565b5050565b6000600154905090565b82805461018d9061052d565b90600052602060002090601f0160209004810192826101af57600085556101f6565b82601f106101c857805160ff19168380011785556101f6565b828001600101855582156101f6579182015b828111156101f55782518255916020019190600101906101da565b5b5090506102039190610207565b5090565b5b80821115610220576000816000905550600101610208565b5090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b61024b81610238565b811461025657600080fd5b50565b60008135905061026881610242565b92915050565b6000602082840312156102845761028361022e565b5b600061029284828501610259565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156102d55780820151818401526020810190506102ba565b838111156102e4576000848401525b50505050565b6000601f19601f8301169050919050565b60006103068261029b565b61031081856102a6565b93506103208185602086016102b7565b610329816102ea565b840191505092915050565b6000602082019050818103600083015261034e81846102fb565b905092915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610398826102ea565b810181811067ffffffffffffffff821117156103b7576103b6610360565b5b80604052505050565b60006103ca610224565b90506103d6828261038f565b919050565b600067ffffffffffffffff8211156103f6576103f5610360565b5b6103ff826102ea565b9050602081019050919050565b82818337600083830152505050565b600061042e610429846103db565b6103c0565b90508281526020810184848401111561044a5761044961035b565b5b61045584828561040c565b509392505050565b600082601f83011261047257610471610356565b5b813561048284826020860161041b565b91505092915050565b6000602082840312156104a1576104a061022e565b5b600082013567ffffffffffffffff8111156104bf576104be610233565b5b6104cb8482850161045d565b91505092915050565b6104dd81610238565b82525050565b60006020820190506104f860008301846104d4565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061054557607f821691505b60208210811415610559576105586104fe565b5b5091905056fea2646970667358221220ab85330d3b63548ea83a3e0e65b1e3c68da0840466ed5f9f2d0fe129442619bb64736f6c63430008090033";

type SimpleStorageConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SimpleStorageConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SimpleStorage__factory extends ContractFactory {
  constructor(...args: SimpleStorageConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SimpleStorage> {
    return super.deploy(overrides || {}) as Promise<SimpleStorage>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): SimpleStorage {
    return super.attach(address) as SimpleStorage;
  }
  override connect(signer: Signer): SimpleStorage__factory {
    return super.connect(signer) as SimpleStorage__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SimpleStorageInterface {
    return new utils.Interface(_abi) as SimpleStorageInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SimpleStorage {
    return new Contract(address, _abi, signerOrProvider) as SimpleStorage;
  }
}
