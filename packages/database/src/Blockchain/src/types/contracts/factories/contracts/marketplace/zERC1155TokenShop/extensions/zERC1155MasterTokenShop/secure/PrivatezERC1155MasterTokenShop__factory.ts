/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../../../common";
import type {
  PrivatezERC1155MasterTokenShop,
  PrivatezERC1155MasterTokenShopInterface,
} from "../../../../../../../contracts/marketplace/zERC1155TokenShop/extensions/zERC1155MasterTokenShop/secure/PrivatezERC1155MasterTokenShop";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "ierc1155master_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "idUsedAsShare_",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner_",
        type: "address",
      },
      {
        internalType: "address",
        name: "membership_",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenContract_",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenUsedForPayment_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "price_",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "submitter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "CapitalWithdrawal",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "Dividend",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "submitter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newPrice",
        type: "uint256",
      },
    ],
    name: "PriceChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "shopAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "contract Membership",
        name: "membership",
        type: "address",
      },
      {
        indexed: false,
        internalType: "contract ERC1155",
        name: "tokenContract",
        type: "address",
      },
      {
        indexed: false,
        internalType: "contract IERC20",
        name: "tokenUsedForPayement",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "ShopCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract IERC1155Master",
        name: "ierc1155master",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "idUsedAsShares",
        type: "uint256",
      },
    ],
    name: "SnapshotTokenSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Sold",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "submitter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TokenOnSaleWithdrawal",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "getContractBalanceOfToken",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRaisedCapital",
    outputs: [
      {
        internalType: "uint256",
        name: "raisedCapital",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getShopStatus",
    outputs: [
      {
        internalType: "enum IPrivatezERC1155TokenShop.Status",
        name: "shopStatus",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ierc1155master",
    outputs: [
      {
        internalType: "contract IERC1155Master",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tokensBoughtByBuyer",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawRaisedCapital",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "withdrawTokensOnSale",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "";

type PrivatezERC1155MasterTokenShopConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PrivatezERC1155MasterTokenShopConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PrivatezERC1155MasterTokenShop__factory extends ContractFactory {
  constructor(...args: PrivatezERC1155MasterTokenShopConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    ierc1155master_: PromiseOrValue<string>,
    idUsedAsShare_: PromiseOrValue<BigNumberish>,
    owner_: PromiseOrValue<string>,
    membership_: PromiseOrValue<string>,
    tokenContract_: PromiseOrValue<string>,
    tokenUsedForPayment_: PromiseOrValue<string>,
    price_: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<PrivatezERC1155MasterTokenShop> {
    return super.deploy(
      ierc1155master_,
      idUsedAsShare_,
      owner_,
      membership_,
      tokenContract_,
      tokenUsedForPayment_,
      price_,
      overrides || {}
    ) as Promise<PrivatezERC1155MasterTokenShop>;
  }
  override getDeployTransaction(
    ierc1155master_: PromiseOrValue<string>,
    idUsedAsShare_: PromiseOrValue<BigNumberish>,
    owner_: PromiseOrValue<string>,
    membership_: PromiseOrValue<string>,
    tokenContract_: PromiseOrValue<string>,
    tokenUsedForPayment_: PromiseOrValue<string>,
    price_: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      ierc1155master_,
      idUsedAsShare_,
      owner_,
      membership_,
      tokenContract_,
      tokenUsedForPayment_,
      price_,
      overrides || {}
    );
  }
  override attach(address: string): PrivatezERC1155MasterTokenShop {
    return super.attach(address) as PrivatezERC1155MasterTokenShop;
  }
  override connect(signer: Signer): PrivatezERC1155MasterTokenShop__factory {
    return super.connect(signer) as PrivatezERC1155MasterTokenShop__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PrivatezERC1155MasterTokenShopInterface {
    return new utils.Interface(_abi) as PrivatezERC1155MasterTokenShopInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PrivatezERC1155MasterTokenShop {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as PrivatezERC1155MasterTokenShop;
  }
}
