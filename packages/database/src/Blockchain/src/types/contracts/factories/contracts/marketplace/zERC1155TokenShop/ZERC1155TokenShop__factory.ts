/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  ZERC1155TokenShop,
  ZERC1155TokenShopInterface,
} from "../../../../contracts/marketplace/zERC1155TokenShop/ZERC1155TokenShop";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "contract Membership",
        name: "membership",
        type: "address",
      },
      {
        internalType: "contract ERC1155",
        name: "tokenContract",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "tokenUsedForPayement",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "submitter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "CapitalWithdrawal",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "submitter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newPrice",
        type: "uint256",
      },
    ],
    name: "PriceChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "shopAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "contract Membership",
        name: "membership",
        type: "address",
      },
      {
        indexed: false,
        internalType: "contract ERC1155",
        name: "tokenContract",
        type: "address",
      },
      {
        indexed: false,
        internalType: "contract IERC20",
        name: "tokenUsedForPayement",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "ShopCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Sold",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "submitter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TokenOnSaleWithdrawal",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "getContractBalanceOfToken",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRaisedCapital",
    outputs: [
      {
        internalType: "uint256",
        name: "raisedCapital",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getShopStatus",
    outputs: [
      {
        internalType: "enum IPrivatezERC1155TokenShop.Status",
        name: "shopStatus",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tokensBoughtByBuyer",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawRaisedCapital",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "withdrawTokensOnSale",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200144e3803806200144e833981810160405281019062000037919062000332565b8484848484836000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550806003819055507f855e55883701532682c21bec3b85df4b8de0bdf933156c28d177cf1fc5c04aea308660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600354604051620001a69695949392919062000491565b60405180910390a150505050505050505050620004fe565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001f082620001c3565b9050919050565b6200020281620001e3565b81146200020e57600080fd5b50565b6000815190506200022281620001f7565b92915050565b60006200023582620001e3565b9050919050565b620002478162000228565b81146200025357600080fd5b50565b60008151905062000267816200023c565b92915050565b60006200027a82620001e3565b9050919050565b6200028c816200026d565b81146200029857600080fd5b50565b600081519050620002ac8162000281565b92915050565b6000620002bf82620001e3565b9050919050565b620002d181620002b2565b8114620002dd57600080fd5b50565b600081519050620002f181620002c6565b92915050565b6000819050919050565b6200030c81620002f7565b81146200031857600080fd5b50565b6000815190506200032c8162000301565b92915050565b600080600080600060a08688031215620003515762000350620001be565b5b6000620003618882890162000211565b9550506020620003748882890162000256565b945050604062000387888289016200029b565b93505060606200039a88828901620002e0565b9250506080620003ad888289016200031b565b9150509295509295909350565b620003c581620001e3565b82525050565b6000819050919050565b6000620003f6620003f0620003ea84620001c3565b620003cb565b620001c3565b9050919050565b60006200040a82620003d5565b9050919050565b60006200041e82620003fd565b9050919050565b620004308162000411565b82525050565b60006200044382620003fd565b9050919050565b620004558162000436565b82525050565b60006200046882620003fd565b9050919050565b6200047a816200045b565b82525050565b6200048b81620002f7565b82525050565b600060c082019050620004a86000830189620003ba565b620004b76020830188620003ba565b620004c6604083018762000425565b620004d560608301866200044a565b620004e460808301856200046f565b620004f360a083018462000480565b979650505050505050565b610f40806200050e6000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c8063b0113bf011610066578063b0113bf01461016f578063bc197c81146101a0578063be10494f146101d0578063f23a6e61146101ee578063f7a452411461021e5761009e565b806301ffc9a7146100a35780635b41ab31146100d357806379e15507146100f157806398d5fdca14610121578063a29863901461013f575b600080fd5b6100bd60048036038101906100b891906106ff565b61024e565b6040516100ca9190610747565b60405180910390f35b6100db6102c8565b6040516100e8919061077b565b60405180910390f35b61010b60048036038101906101069190610820565b6102d7565b604051610118919061077b565b60405180910390f35b6101296102fc565b604051610136919061077b565b60405180910390f35b61015960048036038101906101549190610860565b61030b565b604051610166919061077b565b60405180910390f35b610189600480360381019061018491906109d3565b6103aa565b604051610197929190610a42565b60405180910390f35b6101ba60048036038101906101b59190610b33565b610476565b6040516101c79190610c11565b60405180910390f35b6101d861048b565b6040516101e59190610ca3565b60405180910390f35b61020860048036038101906102039190610cbe565b61049a565b6040516102159190610c11565b60405180910390f35b61023860048036038101906102339190610860565b6104af565b6040516102459190610747565b60405180910390f35b60007f4e2312e0000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806102c157506102c08261059e565b5b9050919050565b60006102d2610608565b905090565b6006602052816000526040600020602052806000526040600020600091509150505481565b6000610306610612565b905090565b60008061031661061c565b73ffffffffffffffffffffffffffffffffffffffff1662fdd58e30856040518363ffffffff1660e01b815260040161034f929190610d64565b60206040518083038186803b15801561036757600080fd5b505afa15801561037b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061039f9190610da2565b905080915050919050565b6000806103b561061c565b73ffffffffffffffffffffffffffffffffffffffff1663f242432a306103d9610646565b8888886040518663ffffffff1660e01b81526004016103fc959493929190610e57565b600060405180830381600087803b15801561041657600080fd5b505af115801561042a573d6000803e3d6000fd5b505050507ff21cb237576772b55d882a9252b328a259ba6c87ee19d43de24c2a553780227c338560405161045f929190610d64565b60405180910390a160018491509150935093915050565b600063bc197c8160e01b905095945050505050565b600061049561064e565b905090565b600063f23a6e6160e01b905095945050505050565b6000806104ba610646565b90506104c68184610665565b6104ce610669565b73ffffffffffffffffffffffffffffffffffffffff1663a9059cbb82856040518363ffffffff1660e01b8152600401610508929190610d64565b602060405180830381600087803b15801561052257600080fd5b505af1158015610536573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061055a9190610edd565b507ffb35b373b75ffde9c4d321bd6402c04d4719e81228f60c40024bdb4aad8d3656818460405161058c929190610d64565b60405180910390a16001915050919050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6000600454905090565b6000600354905090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600033905090565b6000600560009054906101000a900460ff16905090565b5050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6106dc816106a7565b81146106e757600080fd5b50565b6000813590506106f9816106d3565b92915050565b6000602082840312156107155761071461069d565b5b6000610723848285016106ea565b91505092915050565b60008115159050919050565b6107418161072c565b82525050565b600060208201905061075c6000830184610738565b92915050565b6000819050919050565b61077581610762565b82525050565b6000602082019050610790600083018461076c565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107c182610796565b9050919050565b6107d1816107b6565b81146107dc57600080fd5b50565b6000813590506107ee816107c8565b92915050565b6107fd81610762565b811461080857600080fd5b50565b60008135905061081a816107f4565b92915050565b600080604083850312156108375761083661069d565b5b6000610845858286016107df565b92505060206108568582860161080b565b9150509250929050565b6000602082840312156108765761087561069d565b5b60006108848482850161080b565b91505092915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6108e082610897565b810181811067ffffffffffffffff821117156108ff576108fe6108a8565b5b80604052505050565b6000610912610693565b905061091e82826108d7565b919050565b600067ffffffffffffffff82111561093e5761093d6108a8565b5b61094782610897565b9050602081019050919050565b82818337600083830152505050565b600061097661097184610923565b610908565b90508281526020810184848401111561099257610991610892565b5b61099d848285610954565b509392505050565b600082601f8301126109ba576109b961088d565b5b81356109ca848260208601610963565b91505092915050565b6000806000606084860312156109ec576109eb61069d565b5b60006109fa8682870161080b565b9350506020610a0b8682870161080b565b925050604084013567ffffffffffffffff811115610a2c57610a2b6106a2565b5b610a38868287016109a5565b9150509250925092565b6000604082019050610a576000830185610738565b610a64602083018461076c565b9392505050565b600067ffffffffffffffff821115610a8657610a856108a8565b5b602082029050602081019050919050565b600080fd5b6000610aaf610aaa84610a6b565b610908565b90508083825260208201905060208402830185811115610ad257610ad1610a97565b5b835b81811015610afb5780610ae7888261080b565b845260208401935050602081019050610ad4565b5050509392505050565b600082601f830112610b1a57610b1961088d565b5b8135610b2a848260208601610a9c565b91505092915050565b600080600080600060a08688031215610b4f57610b4e61069d565b5b6000610b5d888289016107df565b9550506020610b6e888289016107df565b945050604086013567ffffffffffffffff811115610b8f57610b8e6106a2565b5b610b9b88828901610b05565b935050606086013567ffffffffffffffff811115610bbc57610bbb6106a2565b5b610bc888828901610b05565b925050608086013567ffffffffffffffff811115610be957610be86106a2565b5b610bf5888289016109a5565b9150509295509295909350565b610c0b816106a7565b82525050565b6000602082019050610c266000830184610c02565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60038110610c6c57610c6b610c2c565b5b50565b6000819050610c7d82610c5b565b919050565b6000610c8d82610c6f565b9050919050565b610c9d81610c82565b82525050565b6000602082019050610cb86000830184610c94565b92915050565b600080600080600060a08688031215610cda57610cd961069d565b5b6000610ce8888289016107df565b9550506020610cf9888289016107df565b9450506040610d0a8882890161080b565b9350506060610d1b8882890161080b565b925050608086013567ffffffffffffffff811115610d3c57610d3b6106a2565b5b610d48888289016109a5565b9150509295509295909350565b610d5e816107b6565b82525050565b6000604082019050610d796000830185610d55565b610d86602083018461076c565b9392505050565b600081519050610d9c816107f4565b92915050565b600060208284031215610db857610db761069d565b5b6000610dc684828501610d8d565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610e09578082015181840152602081019050610dee565b83811115610e18576000848401525b50505050565b6000610e2982610dcf565b610e338185610dda565b9350610e43818560208601610deb565b610e4c81610897565b840191505092915050565b600060a082019050610e6c6000830188610d55565b610e796020830187610d55565b610e86604083018661076c565b610e93606083018561076c565b8181036080830152610ea58184610e1e565b90509695505050505050565b610eba8161072c565b8114610ec557600080fd5b50565b600081519050610ed781610eb1565b92915050565b600060208284031215610ef357610ef261069d565b5b6000610f0184828501610ec8565b9150509291505056fea2646970667358221220f794665459ed745d64e6c5532833ed82e33ec2833ed4c3740e6272e0aa5d80a664736f6c63430008090033";

type ZERC1155TokenShopConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ZERC1155TokenShopConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ZERC1155TokenShop__factory extends ContractFactory {
  constructor(...args: ZERC1155TokenShopConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    owner: PromiseOrValue<string>,
    membership: PromiseOrValue<string>,
    tokenContract: PromiseOrValue<string>,
    tokenUsedForPayement: PromiseOrValue<string>,
    price: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ZERC1155TokenShop> {
    return super.deploy(
      owner,
      membership,
      tokenContract,
      tokenUsedForPayement,
      price,
      overrides || {}
    ) as Promise<ZERC1155TokenShop>;
  }
  override getDeployTransaction(
    owner: PromiseOrValue<string>,
    membership: PromiseOrValue<string>,
    tokenContract: PromiseOrValue<string>,
    tokenUsedForPayement: PromiseOrValue<string>,
    price: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      owner,
      membership,
      tokenContract,
      tokenUsedForPayement,
      price,
      overrides || {}
    );
  }
  override attach(address: string): ZERC1155TokenShop {
    return super.attach(address) as ZERC1155TokenShop;
  }
  override connect(signer: Signer): ZERC1155TokenShop__factory {
    return super.connect(signer) as ZERC1155TokenShop__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ZERC1155TokenShopInterface {
    return new utils.Interface(_abi) as ZERC1155TokenShopInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ZERC1155TokenShop {
    return new Contract(address, _abi, signerOrProvider) as ZERC1155TokenShop;
  }
}
