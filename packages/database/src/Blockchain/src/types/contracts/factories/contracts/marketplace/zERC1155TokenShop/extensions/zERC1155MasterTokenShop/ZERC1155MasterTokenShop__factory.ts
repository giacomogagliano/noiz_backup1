/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../../common";
import type {
  ZERC1155MasterTokenShop,
  ZERC1155MasterTokenShopInterface,
} from "../../../../../../contracts/marketplace/zERC1155TokenShop/extensions/zERC1155MasterTokenShop/ZERC1155MasterTokenShop";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "ierc1155master_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "idUsedAsShare_",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner_",
        type: "address",
      },
      {
        internalType: "address",
        name: "membership_",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenContract_",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenUsedForPayment_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "price_",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "submitter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "CapitalWithdrawal",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "Dividend",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "submitter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newPrice",
        type: "uint256",
      },
    ],
    name: "PriceChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "shopAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "contract Membership",
        name: "membership",
        type: "address",
      },
      {
        indexed: false,
        internalType: "contract ERC1155",
        name: "tokenContract",
        type: "address",
      },
      {
        indexed: false,
        internalType: "contract IERC20",
        name: "tokenUsedForPayement",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "ShopCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract IERC1155Master",
        name: "ierc1155master",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "idUsedAsShares",
        type: "uint256",
      },
    ],
    name: "SnapshotTokenSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Sold",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "submitter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TokenOnSaleWithdrawal",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "buyTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "dividendId",
        type: "uint256",
      },
    ],
    name: "capitalOfAt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "dividend",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "dividendOnSharesTransfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "getContractBalanceOfToken",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCurrentDividendId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRaisedCapital",
    outputs: [
      {
        internalType: "uint256",
        name: "raisedCapital",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getShopStatus",
    outputs: [
      {
        internalType: "enum IPrivatezERC1155TokenShop.Status",
        name: "shopStatus",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ierc1155master",
    outputs: [
      {
        internalType: "contract IERC1155Master",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "status",
        type: "uint256",
      },
    ],
    name: "setShopStatus",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tokensBoughtByBuyer",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalCapital",
    outputs: [
      {
        internalType: "uint256",
        name: "capital",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "dividendId",
        type: "uint256",
      },
    ],
    name: "totalCapitalAt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawRaisedCapital",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "withdrawTokensOnSale",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052620000146200029260201b60201c565b600d553480156200002457600080fd5b506040516200312b3803806200312b83398181016040528101906200004a919062000358565b8686868686868684848484848484848484836000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550806003819055507f855e55883701532682c21bec3b85df4b8de0bdf933156c28d177cf1fc5c04aea308660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600354604051620001c596959493929190620004e2565b60405180910390a15050505050505050505086600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550856008819055507fab3065c3f1511789e8b77de2fe7f63fe8d36c868ab14570388e85f691e596199600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166008546040516200027692919062000574565b60405180910390a15050505050505050505050505050620005a1565b6000620002a4620002a960201b60201c565b905090565b6000600454905090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620002e582620002b8565b9050919050565b620002f781620002d8565b81146200030357600080fd5b50565b6000815190506200031781620002ec565b92915050565b6000819050919050565b62000332816200031d565b81146200033e57600080fd5b50565b600081519050620003528162000327565b92915050565b600080600080600080600060e0888a0312156200037a5762000379620002b3565b5b60006200038a8a828b0162000306565b97505060206200039d8a828b0162000341565b9650506040620003b08a828b0162000306565b9550506060620003c38a828b0162000306565b9450506080620003d68a828b0162000306565b93505060a0620003e98a828b0162000306565b92505060c0620003fc8a828b0162000341565b91505092959891949750929550565b6200041681620002d8565b82525050565b6000819050919050565b600062000447620004416200043b84620002b8565b6200041c565b620002b8565b9050919050565b60006200045b8262000426565b9050919050565b60006200046f826200044e565b9050919050565b620004818162000462565b82525050565b600062000494826200044e565b9050919050565b620004a68162000487565b82525050565b6000620004b9826200044e565b9050919050565b620004cb81620004ac565b82525050565b620004dc816200031d565b82525050565b600060c082019050620004f960008301896200040b565b6200050860208301886200040b565b62000517604083018762000476565b6200052660608301866200049b565b620005356080830185620004c0565b6200054460a0830184620004d1565b979650505050505050565b60006200055c826200044e565b9050919050565b6200056e816200054f565b82525050565b60006040820190506200058b600083018562000563565b6200059a6020830184620004d1565b9392505050565b612b7a80620005b16000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c806398d5fdca116100ad578063be10494f11610071578063be10494f1461031f578063c78814631461033d578063f23a6e611461035b578063f7a452411461038b578063fc0a7442146103bb57610121565b806398d5fdca14610240578063a29863901461025e578063b0113bf01461028e578063b9cd4168146102bf578063bc197c81146102ef57610121565b80630ff8cf9b116100f45780630ff8cf9b1461019a578063383032ea146101a45780635b41ab31146101c257806366ea37ed146101e057806379e155071461021057610121565b806301ffc9a71461012657806304d82507146101565780630873d508146101725780630b72c10f14610190575b600080fd5b610140600480360381019061013b9190611a59565b6103d7565b60405161014d9190611aa1565b60405180910390f35b610170600480360381019061016b9190611af2565b610451565b005b61017a610561565b6040516101879190611b9e565b60405180910390f35b610198610587565b005b6101a2610653565b005b6101ac610785565b6040516101b99190611bc8565b60405180910390f35b6101ca610794565b6040516101d79190611bc8565b60405180910390f35b6101fa60048036038101906101f59190611c21565b6107a3565b6040516102079190611bc8565b60405180910390f35b61022a60048036038101906102259190611c21565b6107e3565b6040516102379190611bc8565b60405180910390f35b610248610808565b6040516102559190611bc8565b60405180910390f35b61027860048036038101906102739190611af2565b610817565b6040516102859190611bc8565b60405180910390f35b6102a860048036038101906102a39190611da7565b6108b6565b6040516102b6929190611e16565b60405180910390f35b6102d960048036038101906102d49190611af2565b610982565b6040516102e69190611bc8565b60405180910390f35b61030960048036038101906103049190611f07565b610994565b6040516103169190611fe5565b60405180910390f35b6103276109a9565b6040516103349190612077565b60405180910390f35b6103456109b8565b6040516103529190611bc8565b60405180910390f35b61037560048036038101906103709190612092565b610ac9565b6040516103829190611fe5565b60405180910390f35b6103a560048036038101906103a09190611af2565b610ade565b6040516103b29190611aa1565b60405180910390f35b6103d560048036038101906103d09190612129565b610bcd565b005b60007f4e2312e0000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061044a575061044982610cdb565b5b9050919050565b600061045b610d45565b90506000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1662fdd58e8360016040518363ffffffff1660e01b81526004016104bc9291906121bc565b60206040518083038186803b1580156104d457600080fd5b505afa1580156104e8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061050c91906121fa565b90506000811015610552576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610549906122d0565b60405180910390fd5b61055b83610d4d565b50505050565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000610591610d45565b9050600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610623576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161061a90612388565b60405180910390fd5b61062b610da2565b506000610636610f10565b9050600061064382610f1a565b905061064e81610f4b565b505050565b600061065d610d45565b90506000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1662fdd58e8360016040518363ffffffff1660e01b81526004016106be9291906121bc565b60206040518083038186803b1580156106d657600080fd5b505afa1580156106ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061070e91906121fa565b90506000811015610754576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161074b906122d0565b60405180910390fd5b61075c610da2565b506000610767610f10565b9050600061077482610f1a565b905061077f81610f4b565b50505050565b600061078f610f57565b905090565b600061079e610f61565b905090565b60008060006107ba846107b587610f6b565b610fb3565b9150915060006107c986610fcb565b9050826107d657806107d8565b815b935050505092915050565b6006602052816000526040600020602052806000526040600020600091509150505481565b60006108126111fd565b905090565b600080610822611207565b73ffffffffffffffffffffffffffffffffffffffff1662fdd58e30856040518363ffffffff1660e01b815260040161085b9291906123a8565b60206040518083038186803b15801561087357600080fd5b505afa158015610887573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108ab91906121fa565b905080915050919050565b6000806108c1611207565b73ffffffffffffffffffffffffffffffffffffffff1663f242432a306108e5610d45565b8888886040518663ffffffff1660e01b8152600401610908959493929190612459565b600060405180830381600087803b15801561092257600080fd5b505af1158015610936573d6000803e3d6000fd5b505050507ff21cb237576772b55d882a9252b328a259ba6c87ee19d43de24c2a553780227c338560405161096b9291906123a8565b60405180910390a160018491509150935093915050565b600061098d82610f1a565b9050919050565b600063bc197c8160e01b905095945050505050565b60006109b3611231565b905090565b6000806109c3610d45565b90506000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1662fdd58e8360016040518363ffffffff1660e01b8152600401610a249291906121bc565b60206040518083038186803b158015610a3c57600080fd5b505afa158015610a50573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a7491906121fa565b90506000811015610aba576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ab1906122d0565b60405180910390fd5b610ac2610f10565b9250505090565b600063f23a6e6160e01b905095945050505050565b600080610ae9610d45565b9050610af58184611248565b610afd61134d565b73ffffffffffffffffffffffffffffffffffffffff1663a9059cbb82856040518363ffffffff1660e01b8152600401610b379291906123a8565b602060405180830381600087803b158015610b5157600080fd5b505af1158015610b65573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b8991906124df565b507ffb35b373b75ffde9c4d321bd6402c04d4719e81228f60c40024bdb4aad8d36568184604051610bbb9291906123a8565b60405180910390a16001915050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1662fdd58e3360006040518363ffffffff1660e01b8152600401610c2b929190612547565b60206040518083038186803b158015610c4357600080fd5b505afa158015610c57573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c7b91906121fa565b1415610cbc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cb3906125e2565b60405180910390fd5b6000610cc6610d45565b9050610cd6816002600185611377565b505050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b600033905090565b6000816002811115610d6257610d61612000565b5b600560006101000a81548160ff02191690836002811115610d8657610d85612000565b5b0217905550600560009054906101000a900460ff169050919050565b6000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639711715a6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610e0e57600080fd5b505af1158015610e22573d6000803e3d6000fd5b50505050600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635439ad866040518163ffffffff1660e01b815260040160206040518083038186803b158015610e8e57600080fd5b505afa158015610ea2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ec691906121fa565b600e81905550610ed4610f10565b90507f69c382338c74e0d3a990efe1a52ae89dcf6a9ab705628ec4424f49cddd4e2f8981604051610f059190611bc8565b60405180910390a190565b6000600e54905090565b6000806000610f2a84600b610fb3565b9150915081610f4057610f3b610794565b610f42565b805b92505050919050565b610f5481611604565b50565b6000600d54905090565b6000600454905090565b6000600960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050919050565b600080610fc08484611612565b915091509250929050565b6000806000600190505b610fdd610f10565b81116111f35760006064600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663626da068876001866040518463ffffffff1660e01b815260040161104793929190612602565b60206040518083038186803b15801561105f57600080fd5b505afa158015611073573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061109791906121fa565b6110a19190612668565b90506000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638aa7a8b06001856040518363ffffffff1660e01b81526004016111039291906126c2565b60206040518083038186803b15801561111b57600080fd5b505afa15801561112f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061115391906121fa565b905060008061116b838561170890919063ffffffff16565b9150915060008261117d57600061117f565b815b9050600061118c87610f1a565b9050600080600083141561119f576111d5565b83836111ab9190612668565b91506000806111c460648561170890919063ffffffff16565b9150915081156111d2578092505b50505b809950505050505050505080806111eb906126eb565b915050610fd5565b5080915050919050565b6000600354905090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600560009054906101000a900460ff16905090565b611252828261173f565b600061125d83610fcb565b90506000600a60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054826112ac9190612734565b905082600a60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546112fd9190612768565b9250508190555080831115611347576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161133e90612830565b60405180910390fd5b50505050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600061138585858585611743565b6001600281111561139957611398612000565b5b6113a1611231565b60028111156113b3576113b2612000565b5b146113f3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113ea9061289c565b60405180910390fd5b60006113fd6111fd565b846114089190612668565b905083600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000878152602001908152602001600020600082825461146a9190612768565b92505081905550600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b81526004016114d0939291906128bc565b602060405180830381600087803b1580156114ea57600080fd5b505af11580156114fe573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061152291906124df565b5080600460008282546115359190612768565b92505081905550611544611207565b73ffffffffffffffffffffffffffffffffffffffff1663f242432a30611568610d45565b8888886040518663ffffffff1660e01b815260040161158b959493929190612459565b600060405180830381600087803b1580156115a557600080fd5b505af11580156115b9573d6000803e3d6000fd5b505050507fbac9694ac0daa55169abd117086fe32c89401d9a3b15dd1d34e55e0aa4e47a9d3386866040516115f0939291906128f3565b60405180910390a183915050949350505050565b61160f600b8261181f565b50565b60008060008411611658576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161164f90612976565b60405180910390fd5b611660610f10565b8411156116a2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161169990612a08565b60405180910390fd5b60006116ba858560000161189a90919063ffffffff16565b905083600001805490508114156116d8576000809250925050611701565b60018460010182815481106116f0576116ef612a28565b5b906000526020600020015492509250505b9250929050565b60008060008314156117205760008091509150611738565b600183858161173257611731612a57565b5b04915091505b9250929050565b5050565b61174f84848484611974565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663642898d0306040518263ffffffff1660e01b81526004016117aa9190612a86565b600060405180830381600087803b1580156117c457600080fd5b505af11580156117d8573d6000803e3d6000fd5b505050507fbac9694ac0daa55169abd117086fe32c89401d9a3b15dd1d34e55e0aa4e47a9d846002600160405161181193929190612adc565b60405180910390a150505050565b6000611829610f10565b9050806118388460000161197a565b10156118955782600001819080600181540180825580915050600190039060005260206000200160009091909190915055826001018290806001815401808255809150506001900390600052602060002001600090919091909150555b505050565b600080838054905014156118b1576000905061196e565b600080848054905090505b808210156119155760006118d083836119c7565b9050848682815481106118e6576118e5612a28565b5b906000526020600020015411156118ff5780915061190f565b60018161190c9190612768565b92505b506118bc565b60008211801561194d5750838560018461192f9190612734565b815481106119405761193f612a28565b5b9060005260206000200154145b156119685760018261195f9190612734565b9250505061196e565b81925050505b92915050565b50505050565b6000808280549050141561199157600090506119c2565b81600183805490506119a39190612734565b815481106119b4576119b3612a28565b5b906000526020600020015490505b919050565b600060028284186119d89190612b13565b8284166119e59190612768565b905092915050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611a3681611a01565b8114611a4157600080fd5b50565b600081359050611a5381611a2d565b92915050565b600060208284031215611a6f57611a6e6119f7565b5b6000611a7d84828501611a44565b91505092915050565b60008115159050919050565b611a9b81611a86565b82525050565b6000602082019050611ab66000830184611a92565b92915050565b6000819050919050565b611acf81611abc565b8114611ada57600080fd5b50565b600081359050611aec81611ac6565b92915050565b600060208284031215611b0857611b076119f7565b5b6000611b1684828501611add565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000611b64611b5f611b5a84611b1f565b611b3f565b611b1f565b9050919050565b6000611b7682611b49565b9050919050565b6000611b8882611b6b565b9050919050565b611b9881611b7d565b82525050565b6000602082019050611bb36000830184611b8f565b92915050565b611bc281611abc565b82525050565b6000602082019050611bdd6000830184611bb9565b92915050565b6000611bee82611b1f565b9050919050565b611bfe81611be3565b8114611c0957600080fd5b50565b600081359050611c1b81611bf5565b92915050565b60008060408385031215611c3857611c376119f7565b5b6000611c4685828601611c0c565b9250506020611c5785828601611add565b9150509250929050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611cb482611c6b565b810181811067ffffffffffffffff82111715611cd357611cd2611c7c565b5b80604052505050565b6000611ce66119ed565b9050611cf28282611cab565b919050565b600067ffffffffffffffff821115611d1257611d11611c7c565b5b611d1b82611c6b565b9050602081019050919050565b82818337600083830152505050565b6000611d4a611d4584611cf7565b611cdc565b905082815260208101848484011115611d6657611d65611c66565b5b611d71848285611d28565b509392505050565b600082601f830112611d8e57611d8d611c61565b5b8135611d9e848260208601611d37565b91505092915050565b600080600060608486031215611dc057611dbf6119f7565b5b6000611dce86828701611add565b9350506020611ddf86828701611add565b925050604084013567ffffffffffffffff811115611e0057611dff6119fc565b5b611e0c86828701611d79565b9150509250925092565b6000604082019050611e2b6000830185611a92565b611e386020830184611bb9565b9392505050565b600067ffffffffffffffff821115611e5a57611e59611c7c565b5b602082029050602081019050919050565b600080fd5b6000611e83611e7e84611e3f565b611cdc565b90508083825260208201905060208402830185811115611ea657611ea5611e6b565b5b835b81811015611ecf5780611ebb8882611add565b845260208401935050602081019050611ea8565b5050509392505050565b600082601f830112611eee57611eed611c61565b5b8135611efe848260208601611e70565b91505092915050565b600080600080600060a08688031215611f2357611f226119f7565b5b6000611f3188828901611c0c565b9550506020611f4288828901611c0c565b945050604086013567ffffffffffffffff811115611f6357611f626119fc565b5b611f6f88828901611ed9565b935050606086013567ffffffffffffffff811115611f9057611f8f6119fc565b5b611f9c88828901611ed9565b925050608086013567ffffffffffffffff811115611fbd57611fbc6119fc565b5b611fc988828901611d79565b9150509295509295909350565b611fdf81611a01565b82525050565b6000602082019050611ffa6000830184611fd6565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600381106120405761203f612000565b5b50565b60008190506120518261202f565b919050565b600061206182612043565b9050919050565b61207181612056565b82525050565b600060208201905061208c6000830184612068565b92915050565b600080600080600060a086880312156120ae576120ad6119f7565b5b60006120bc88828901611c0c565b95505060206120cd88828901611c0c565b94505060406120de88828901611add565b93505060606120ef88828901611add565b925050608086013567ffffffffffffffff8111156121105761210f6119fc565b5b61211c88828901611d79565b9150509295509295909350565b60006020828403121561213f5761213e6119f7565b5b600082013567ffffffffffffffff81111561215d5761215c6119fc565b5b61216984828501611d79565b91505092915050565b61217b81611be3565b82525050565b6000819050919050565b60006121a66121a161219c84612181565b611b3f565b611abc565b9050919050565b6121b68161218b565b82525050565b60006040820190506121d16000830185612172565b6121de60208301846121ad565b9392505050565b6000815190506121f481611ac6565b92915050565b6000602082840312156122105761220f6119f7565b5b600061221e848285016121e5565b91505092915050565b600082825260208201905092915050565b7f5a494f4e2e455243313135354d6173746572546f6b656e53686f703a3a20557360008201527f6572206973206e6f7420616c6c6f77656420746f2063616c6c2074686973206660208201527f756e6374696f6e00000000000000000000000000000000000000000000000000604082015250565b60006122ba604783612227565b91506122c582612238565b606082019050919050565b600060208201905081810360008301526122e9816122ad565b9050919050565b7f5a696f6e2e455243313135354d6173746572546f6b656e53686f703a3a204f6e60008201527f6c7920455243313135354d61737465722063616e2063616c6c2074686973206660208201527f756e6374696f6e00000000000000000000000000000000000000000000000000604082015250565b6000612372604783612227565b915061237d826122f0565b606082019050919050565b600060208201905081810360008301526123a181612365565b9050919050565b60006040820190506123bd6000830185612172565b6123ca6020830184611bb9565b9392505050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561240b5780820151818401526020810190506123f0565b8381111561241a576000848401525b50505050565b600061242b826123d1565b61243581856123dc565b93506124458185602086016123ed565b61244e81611c6b565b840191505092915050565b600060a08201905061246e6000830188612172565b61247b6020830187612172565b6124886040830186611bb9565b6124956060830185611bb9565b81810360808301526124a78184612420565b90509695505050505050565b6124bc81611a86565b81146124c757600080fd5b50565b6000815190506124d9816124b3565b92915050565b6000602082840312156124f5576124f46119f7565b5b6000612503848285016124ca565b91505092915050565b6000819050919050565b600061253161252c6125278461250c565b611b3f565b611abc565b9050919050565b61254181612516565b82525050565b600060408201905061255c6000830185612172565b6125696020830184612538565b9392505050565b7f75736572206973206e6f7420796574204d656d626572206f662074686973204460008201527f414f000000000000000000000000000000000000000000000000000000000000602082015250565b60006125cc602283612227565b91506125d782612570565b604082019050919050565b600060208201905081810360008301526125fb816125bf565b9050919050565b60006060820190506126176000830186612172565b61262460208301856121ad565b6126316040830184611bb9565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061267382611abc565b915061267e83611abc565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156126b7576126b6612639565b5b828202905092915050565b60006040820190506126d760008301856121ad565b6126e46020830184611bb9565b9392505050565b60006126f682611abc565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561272957612728612639565b5b600182019050919050565b600061273f82611abc565b915061274a83611abc565b92508282101561275d5761275c612639565b5b828203905092915050565b600061277382611abc565b915061277e83611abc565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156127b3576127b2612639565b5b828201905092915050565b7f455243313135354d6173746572546f6b656e53686f703a3a20616d6f756e742060008201527f657863656564732062616c616e6365206f66206163636f756e74000000000000602082015250565b600061281a603a83612227565b9150612825826127be565b604082019050919050565b600060208201905081810360008301526128498161280d565b9050919050565b7f546f6b656e2073616c652069732043757272656e746c7920636c6f7365640000600082015250565b6000612886601e83612227565b915061289182612850565b602082019050919050565b600060208201905081810360008301526128b581612879565b9050919050565b60006060820190506128d16000830186612172565b6128de6020830185612172565b6128eb6040830184611bb9565b949350505050565b60006060820190506129086000830186612172565b6129156020830185611bb9565b6129226040830184611bb9565b949350505050565b7f455243313135354d6173746572546f6b656e53686f703a3a2069642069732030600082015250565b6000612960602083612227565b915061296b8261292a565b602082019050919050565b6000602082019050818103600083015261298f81612953565b9050919050565b7f455243313135354d6173746572546f6b656e53686f703a3a206e6f6e6578697360008201527f74656e7420696400000000000000000000000000000000000000000000000000602082015250565b60006129f2602783612227565b91506129fd82612996565b604082019050919050565b60006020820190508181036000830152612a21816129e5565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000602082019050612a9b6000830184612172565b92915050565b6000819050919050565b6000612ac6612ac1612abc84612aa1565b611b3f565b611abc565b9050919050565b612ad681612aab565b82525050565b6000606082019050612af16000830186612172565b612afe6020830185612acd565b612b0b60408301846121ad565b949350505050565b6000612b1e82611abc565b9150612b2983611abc565b925082612b3957612b38612a57565b5b82820490509291505056fea2646970667358221220e196fe958a089ee15c72bb69948df754a0a6503a7621c02de735ad20fb5ffb6d64736f6c63430008090033";

type ZERC1155MasterTokenShopConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ZERC1155MasterTokenShopConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ZERC1155MasterTokenShop__factory extends ContractFactory {
  constructor(...args: ZERC1155MasterTokenShopConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    ierc1155master_: PromiseOrValue<string>,
    idUsedAsShare_: PromiseOrValue<BigNumberish>,
    owner_: PromiseOrValue<string>,
    membership_: PromiseOrValue<string>,
    tokenContract_: PromiseOrValue<string>,
    tokenUsedForPayment_: PromiseOrValue<string>,
    price_: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ZERC1155MasterTokenShop> {
    return super.deploy(
      ierc1155master_,
      idUsedAsShare_,
      owner_,
      membership_,
      tokenContract_,
      tokenUsedForPayment_,
      price_,
      overrides || {}
    ) as Promise<ZERC1155MasterTokenShop>;
  }
  override getDeployTransaction(
    ierc1155master_: PromiseOrValue<string>,
    idUsedAsShare_: PromiseOrValue<BigNumberish>,
    owner_: PromiseOrValue<string>,
    membership_: PromiseOrValue<string>,
    tokenContract_: PromiseOrValue<string>,
    tokenUsedForPayment_: PromiseOrValue<string>,
    price_: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      ierc1155master_,
      idUsedAsShare_,
      owner_,
      membership_,
      tokenContract_,
      tokenUsedForPayment_,
      price_,
      overrides || {}
    );
  }
  override attach(address: string): ZERC1155MasterTokenShop {
    return super.attach(address) as ZERC1155MasterTokenShop;
  }
  override connect(signer: Signer): ZERC1155MasterTokenShop__factory {
    return super.connect(signer) as ZERC1155MasterTokenShop__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ZERC1155MasterTokenShopInterface {
    return new utils.Interface(_abi) as ZERC1155MasterTokenShopInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ZERC1155MasterTokenShop {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ZERC1155MasterTokenShop;
  }
}
